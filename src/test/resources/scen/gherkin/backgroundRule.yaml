- var: called=C
- var: init=I

- gherkin: features/backgoundRule.feature
  params:
    expr:
      - text: a given predicate
        steps:
          - var: called=${called}G
          - assert.equals:
            params:
              expected: INIT
              actual: ${initVar}

      - text: a when predicate
        steps:
          - var: called=${called}W
          - assert.equals:
            params:
              expected: INIT
              actual: ${initVar}

      - text: a then predicate
        steps:
          - var: called=${called}T
          - assert.equals:
            params:
              expected: INIT
              actual: ${initVar}

      - text: a given predicate no init
        steps:
          - var: called=${called}G
          - assert.equals:
            params:
              expected: empty
              actual: ${initVar}

      - text: a when predicate no init
        steps:
          - var: called=${called}W
          - assert.equals:
            params:
              expected: empty
              actual: ${initVar}

      - text: a then predicate no init
        steps:
          - var: called=${called}T
          - assert.equals:
            params:
              expected: empty
              actual: ${initVar}

      - text: a rule init step
        steps:
          - var: init=${init}I
          - var: initVar=INIT

      - text: an empty variable
        steps:
          - var: initVar=empty

- assert.equals:
  params:
    expected: CGWTGWTGWTGWT
    actual: ${called}

- assert.equals:
  params:
    expected: III
    actual: ${init}
